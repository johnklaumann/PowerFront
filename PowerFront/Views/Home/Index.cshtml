@using OperatorReport.Models
@model List<OperatorReportViewModel>

@{
    ViewBag.Title = "Operator Report";
}

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f4f4;
        margin: 20px;
    }

    h2 {
        color: #333;
    }

    fieldset {
        border: 1px solid #ddd;
        padding: 10px;
        margin-bottom: 20px;
        background: #fff;
    }

    legend {
        padding: 0 10px;
        color: #555;
    }

    input[type="radio"],
    input[type="date"],
    select {
        margin: 10px 0;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        background: #fff;
    }

    th, td {
        text-align: left;
        padding: 8px;
        border: 1px solid #ddd;
    }

    th {
        background-color: #f2f2f2;
    }

    tr:nth-child(even) {
        background-color: #f9f9f9;
    }
</style>

<h2>Operator Report</h2>

<!-- Date Filter -->
<fieldset>
    <legend>Date Filter</legend>
    <input type="radio" name="dateFilter" value="preDefined" checked> Pre-Defined
    <input type="radio" name="dateFilter" value="custom"> Custom

    <!-- Pre-Defined Dropdown -->
    <select id="preDefinedOptions" name="preDefinedOptions" onchange="fetchData()">
        <option value="">Choose a period</option>
        <option value="today">Today</option>
        <option value="yesterday">Yesterday</option>
        <option value="thisWeek">This Week</option>
        <option value="lastWeek">Last Week</option>
        <option value="thisMonth">This Month</option>
        <option value="lastMonth">Last Month</option>
        <option value="thisYear">This Year</option>
        <option value="lastYear">Last Year</option>
    </select>

    <!-- Custom Date Range -->
    <label>From: <input type="date" id="fromDate" name="fromDate" disabled onchange="fetchData()"></label>
    <label>To: <input type="date" id="toDate" name="toDate" disabled onchange="fetchData()"></label>
</fieldset>

<!-- Website Filter -->
<fieldset>
    <legend>Website</legend>
    <select id="website" name="website" onchange="fetchData()">
        <option value="">Choose a website</option>
        <!-- Populate from database -->
    </select>
</fieldset>

<!-- Device Filter -->
<fieldset>
    <legend>Device</legend>
    <select id="device" name="device" onchange="fetchData()">
        <option value="">Choose a device</option>
        <!-- Populate from database -->
    </select>
</fieldset>

<button onclick="exportToExcel()">Export to Excel</button>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        fetchDataForDropdown('website', '/operatorcontroller/GetDistinctWebsites');
        fetchDataForDropdown('device', '/operatorcontroller/GetDistinctDevices');
    });

    document.getElementsByName('dateFilter').forEach(radio => {
        radio.addEventListener('change', function () {
            let isCustom = this.value === 'custom';
            document.getElementById('fromDate').disabled = !isCustom;
            document.getElementById('toDate').disabled = !isCustom;
            if (!isCustom) {
                fetchData(); // Fetch data when switching back to pre-defined options
            }
        });
    });

    function exportToExcel() {
        var dateOption = document.getElementById('preDefinedOptions').value;
        var fromDate = document.getElementById('fromDate').value;
        var toDate = document.getElementById('toDate').value;
        var website = document.getElementById('website').value;
        var device = document.getElementById('device').value;

        var baseUrl = '@Url.Action("ExportToExcel", "OperatorController")';
        var query = `?dateOption=${dateOption}&fromDate=${fromDate}&toDate=${toDate}&website=${website}&device=${device}`;
        window.location.href = baseUrl + query;
    }

    function fetchDataForDropdown(dropdownId, apiEndpoint) {
        fetch(apiEndpoint)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                const selectElement = document.getElementById(dropdownId);
                for (let i = selectElement.options.length - 1; i > 0; i--) {
                    selectElement.remove(i);
                }
                data.forEach(item => {
                    let option = new Option(item, item);
                    selectElement.add(option);
                });
            })
            .catch(error => {
                console.error(`Error fetching data for ${dropdownId}:`, error);
            });
    }

    function fetchData() {
        var getOperatorUrl = '@Url.Action("GetOperator", "OperatorController")';
        let dateOption = document.getElementById('preDefinedOptions').value;
        let fromDate = document.getElementById('fromDate').value;
        let toDate = document.getElementById('toDate').value;
        let website = document.getElementById('website').value;
        let device = document.getElementById('device').value;

        $.ajax({
            url: getOperatorUrl, // Adjust the controller name
            type: 'GET',
            cache: false,
            data: {
                dateOption: dateOption,
                fromDate: fromDate,
                toDate: toDate,
                website: website,
                device: device
            },
            success: function (data) {
                console.log("Data received:", data);
                // Replace the table body with the updated data
                $('table tbody').html(data);
            },
            error: function (error) {
                console.log("Error fetching data: ", error);
            }
        });
    }
</script>

<table>
    <thead>
        <tr>
            <th>S.No.</th>
            <th>Operator Name</th>
            <th>Proactive Sent</th>
            <th>Proactive Answered</th>
            <th>Proactive Response Rate</th>
            <th>Reactive Received</th>
            <th>Reactive Answered</th>
            <th>Reactive Response Rate</th>
            <th>Total Chat Length</th>
            <th>Average Chat Length</th>
        </tr>
    </thead>
    <tbody>
        @foreach (OperatorReportViewModel item in Model)
        {
            <tr>
                <td>@item.ID</td>
                <td>@item.Name</td>
                <td>@item.ProactiveSent</td>
                <td>@item.ProactiveAnswered</td>
                <td>@item.ProactiveResponseRate</td>
                <td>@item.ReactiveReceived</td>
                <td>@item.ReactiveAnswered</td>
                <td>@item.ReactiveResponseRate</td>
                <td>@item.TotalChatLength</td>
                <td>@item.AverageChatLength</td>
            </tr>
        }
    </tbody>
</table>
